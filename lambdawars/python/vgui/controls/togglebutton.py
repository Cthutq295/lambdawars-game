from srcbase import KeyValuesfrom vgui.controls import Buttonfrom input import ButtonCode_tclass ToggleButton(Button):    def __init__(self, parent, panelName, text):        super(ToggleButton, self).__init__(parent, panelName, text)                self.SetButtonActivationType(self.ACTIVATE_ONPRESSED)    def OnMouseDoublePressed(self, code):        """ Turns double-click into normal click """        self.OnMousePressed(code)    def GetButtonFgColor(self):        if self.IsSelected():            # highlight the text when depressed            return self._selectedColor        else:            return super(ToggleButton, self).GetButtonFgColor()    def CanBeDefaultButton(self):        return False    def DoClick(self):        """ Toggles the state of the button """        if self.IsSelected():            self.ForceDepressed(False)        elif not self.IsSelected():            self.ForceDepressed(True)        self.SetSelected( not self.IsSelected() )        self.FireActionSignal()        # post a button toggled message        msg = KeyValues("ButtonToggled")        msg.SetInt("state", int(self.IsSelected()))        self.PostActionSignal(msg)                self.Repaint()        def ApplySchemeSettings(self, schemeobj):        super(ToggleButton, self).ApplySchemeSettings(schemeobj)        self._selectedColor = self.GetSchemeColor("ToggleButton.SelectedTextColor", schemeobj)    def OnKeyCodePressed(self, code):        if code != ButtonCode_t.KEY_ENTER:            super(ToggleButton, self).OnKeyCodePressed(code)